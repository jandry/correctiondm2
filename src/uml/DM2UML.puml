@startuml ServeurWeb

interface IServeurWeb {
     + repondre(RequeteHttp): int
}

class ServeurWeb 

class ServeurWebProxy {
     - serveurWeb: ServeurWeb
}

class RequeteHttp {
     - list: List<IAffichable>
     + getUrl(): String
     + ajouter(IAffichable)
}
note right: Design Pattern Composite

interface IAffichable {
     + afficher(): String
}

class Url {
     - path: String
     + Url(String)
}

class Header {
     - headers: Map<String, String>
     + ajouterHeader(String, String)
}

class Body {
     - content: String
     + Body(String)
}

RequeteHttp .up.|> IAffichable
Url .up.|> IAffichable
Header .up.|> IAffichable
Body .up.|> IAffichable

Url -down-* RequeteHttp: url
Header -down-* RequeteHttp: header
Body -down-* RequeteHttp: body
 
ServeurWeb <-right- ServeurWebProxy : use
ServeurWeb .up.|> IServeurWeb
ServeurWebProxy .up.|> IServeurWeb
note "Design Pattern Proxy" as NoteProxy
ServeurWebProxy .down. NoteProxy
ServeurWeb .down. NoteProxy

@enduml
